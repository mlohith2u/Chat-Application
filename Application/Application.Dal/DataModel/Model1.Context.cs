//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Application.Dal.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChatAppEntities : DbContext
    {
        public ChatAppEntities()
            : base("name=ChatAppEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<A_U_Management> A_U_Management { get; set; }
        public virtual DbSet<A_U_MenuMaster> A_U_MenuMaster { get; set; }
        public virtual DbSet<A_U_Token> A_U_Token { get; set; }
        public virtual DbSet<A_WorkflowFormMaster> A_WorkflowFormMaster { get; set; }
        public virtual DbSet<A_WorkflowTransDetails> A_WorkflowTransDetails { get; set; }
        public virtual DbSet<A_WorkflowTransMailBoxes> A_WorkflowTransMailBoxes { get; set; }
        public virtual DbSet<A_WorkflowTransMasters> A_WorkflowTransMasters { get; set; }
        public virtual DbSet<ChatConversation> ChatConversations { get; set; }
        public virtual DbSet<ChatMaster> ChatMasters { get; set; }
        public virtual DbSet<CourseImage> CourseImages { get; set; }
        public virtual DbSet<EmployeeLeaveDetail> EmployeeLeaveDetails { get; set; }
        public virtual DbSet<ExaminationMaster> ExaminationMasters { get; set; }
        public virtual DbSet<ExternalLogin> ExternalLogins { get; set; }
        public virtual DbSet<FacultyImage> FacultyImages { get; set; }
        public virtual DbSet<FacultyMaster> FacultyMasters { get; set; }
        public virtual DbSet<FeedbackRating> FeedbackRatings { get; set; }
        public virtual DbSet<Leave_StatusMaster> Leave_StatusMaster { get; set; }
        public virtual DbSet<LeaveHistoryMaster> LeaveHistoryMasters { get; set; }
        public virtual DbSet<LeaveList> LeaveLists { get; set; }
        public virtual DbSet<LeaveMaster> LeaveMasters { get; set; }
        public virtual DbSet<LeaveUpdateCountDetail> LeaveUpdateCountDetails { get; set; }
        public virtual DbSet<message> messages { get; set; }
        public virtual DbSet<Policytable> Policytables { get; set; }
        public virtual DbSet<SessionDetail> SessionDetails { get; set; }
        public virtual DbSet<StudentChapter> StudentChapters { get; set; }
        public virtual DbSet<StudentDocumentDetail> StudentDocumentDetails { get; set; }
        public virtual DbSet<StudentFilePlanDetail> StudentFilePlanDetails { get; set; }
        public virtual DbSet<StudentFolderDetail> StudentFolderDetails { get; set; }
        public virtual DbSet<StudentImage> StudentImages { get; set; }
        public virtual DbSet<StudentsTest> StudentsTests { get; set; }
        public virtual DbSet<StudentTest> StudentTests { get; set; }
        public virtual DbSet<StudetTestPaperResult> StudetTestPaperResults { get; set; }
        public virtual DbSet<tblCartDetail> tblCartDetails { get; set; }
        public virtual DbSet<tblChapterMaster> tblChapterMasters { get; set; }
        public virtual DbSet<tblCourseMaster> tblCourseMasters { get; set; }
        public virtual DbSet<tblDomainMaster> tblDomainMasters { get; set; }
        public virtual DbSet<tblDurationMaster> tblDurationMasters { get; set; }
        public virtual DbSet<tblEnrollDetail> tblEnrollDetails { get; set; }
        public virtual DbSet<tblGenderMaster> tblGenderMasters { get; set; }
        public virtual DbSet<tblLevelMaster> tblLevelMasters { get; set; }
        public virtual DbSet<tblOccupationMaster> tblOccupationMasters { get; set; }
        public virtual DbSet<tblOptionMaster> tblOptionMasters { get; set; }
        public virtual DbSet<tblPresentationMaster> tblPresentationMasters { get; set; }
        public virtual DbSet<tblPriceMaster> tblPriceMasters { get; set; }
        public virtual DbSet<tblQualificationMaster> tblQualificationMasters { get; set; }
        public virtual DbSet<tblQuestionBankMaster> tblQuestionBankMasters { get; set; }
        public virtual DbSet<tblQuestionbankQuestion> tblQuestionbankQuestions { get; set; }
        public virtual DbSet<tblQuestionMaster> tblQuestionMasters { get; set; }
        public virtual DbSet<tblRoleMaster> tblRoleMasters { get; set; }
        public virtual DbSet<tblStudentCours> tblStudentCourses { get; set; }
        public virtual DbSet<tblStudentDetail> tblStudentDetails { get; set; }
        public virtual DbSet<tblsubmitAnswer> tblsubmitAnswers { get; set; }
        public virtual DbSet<tblTechnologyMaster> tblTechnologyMasters { get; set; }
        public virtual DbSet<tblTestMaster> tblTestMasters { get; set; }
        public virtual DbSet<tblTestQuestionMaster> tblTestQuestionMasters { get; set; }
        public virtual DbSet<TestPaper> TestPapers { get; set; }
        public virtual DbSet<TestPaperName> TestPaperNames { get; set; }
        public virtual DbSet<Token> Tokens { get; set; }
        public virtual DbSet<TransactionTable> TransactionTables { get; set; }
        public virtual DbSet<UploadDocument> UploadDocuments { get; set; }
        public virtual DbSet<UserAttendance> UserAttendances { get; set; }
        public virtual DbSet<UserBiometric> UserBiometrics { get; set; }
        public virtual DbSet<VA_Workflow_Leave_Master> VA_Workflow_Leave_Master { get; set; }
        public virtual DbSet<Workflow_Comment_HistoryTable> Workflow_Comment_HistoryTable { get; set; }
        public virtual DbSet<WorkflowStageMaster> WorkflowStageMasters { get; set; }
        public virtual DbSet<A_U_Client> A_U_Client { get; set; }
        public virtual DbSet<A_U_FunctionMaster> A_U_FunctionMaster { get; set; }
        public virtual DbSet<ExamLevel> ExamLevels { get; set; }
        public virtual DbSet<useractivity> useractivities { get; set; }
    
        public virtual ObjectResult<Proc_IsValidUser_Result> Proc_IsValidUser(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_IsValidUser_Result>("Proc_IsValidUser", emailParameter, passwordParameter);
        }
    
        public virtual int Proc_MailBox_ChangeStatus(Nullable<decimal> wTM_MasID, Nullable<decimal> wTM_TransID, Nullable<decimal> wTM_TrnTo, string wTM_TrnStatus, ObjectParameter iRetOperation)
        {
            var wTM_MasIDParameter = wTM_MasID.HasValue ?
                new ObjectParameter("WTM_MasID", wTM_MasID) :
                new ObjectParameter("WTM_MasID", typeof(decimal));
    
            var wTM_TransIDParameter = wTM_TransID.HasValue ?
                new ObjectParameter("WTM_TransID", wTM_TransID) :
                new ObjectParameter("WTM_TransID", typeof(decimal));
    
            var wTM_TrnToParameter = wTM_TrnTo.HasValue ?
                new ObjectParameter("WTM_TrnTo", wTM_TrnTo) :
                new ObjectParameter("WTM_TrnTo", typeof(decimal));
    
            var wTM_TrnStatusParameter = wTM_TrnStatus != null ?
                new ObjectParameter("WTM_TrnStatus", wTM_TrnStatus) :
                new ObjectParameter("WTM_TrnStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_MailBox_ChangeStatus", wTM_MasIDParameter, wTM_TransIDParameter, wTM_TrnToParameter, wTM_TrnStatusParameter, iRetOperation);
        }
    
        public virtual int PROC_Menu_Delete(Nullable<int> menuIdentity)
        {
            var menuIdentityParameter = menuIdentity.HasValue ?
                new ObjectParameter("MenuIdentity", menuIdentity) :
                new ObjectParameter("MenuIdentity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_Menu_Delete", menuIdentityParameter);
        }
    
        public virtual ObjectResult<string> PROC_Menu_Insert(string menuID, string menuName, string parent_MenuID, Nullable<int> user_Roll, string menuFileName, string menuURL, string uSE_YN)
        {
            var menuIDParameter = menuID != null ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(string));
    
            var menuNameParameter = menuName != null ?
                new ObjectParameter("MenuName", menuName) :
                new ObjectParameter("MenuName", typeof(string));
    
            var parent_MenuIDParameter = parent_MenuID != null ?
                new ObjectParameter("Parent_MenuID", parent_MenuID) :
                new ObjectParameter("Parent_MenuID", typeof(string));
    
            var user_RollParameter = user_Roll.HasValue ?
                new ObjectParameter("User_Roll", user_Roll) :
                new ObjectParameter("User_Roll", typeof(int));
    
            var menuFileNameParameter = menuFileName != null ?
                new ObjectParameter("MenuFileName", menuFileName) :
                new ObjectParameter("MenuFileName", typeof(string));
    
            var menuURLParameter = menuURL != null ?
                new ObjectParameter("MenuURL", menuURL) :
                new ObjectParameter("MenuURL", typeof(string));
    
            var uSE_YNParameter = uSE_YN != null ?
                new ObjectParameter("USE_YN", uSE_YN) :
                new ObjectParameter("USE_YN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PROC_Menu_Insert", menuIDParameter, menuNameParameter, parent_MenuIDParameter, user_RollParameter, menuFileNameParameter, menuURLParameter, uSE_YNParameter);
        }
    
        public virtual ObjectResult<PROC_Menu_Select_Result> PROC_Menu_Select(string menuID, string menuName)
        {
            var menuIDParameter = menuID != null ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(string));
    
            var menuNameParameter = menuName != null ?
                new ObjectParameter("MenuName", menuName) :
                new ObjectParameter("MenuName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_Menu_Select_Result>("PROC_Menu_Select", menuIDParameter, menuNameParameter);
        }
    
        public virtual ObjectResult<string> PROC_Menu_Update(Nullable<int> menuIdentity, string menuID, string menuName, string parent_MenuID, Nullable<int> user_Roll, string menuFileName, string menuURL, string uSE_YN)
        {
            var menuIdentityParameter = menuIdentity.HasValue ?
                new ObjectParameter("MenuIdentity", menuIdentity) :
                new ObjectParameter("MenuIdentity", typeof(int));
    
            var menuIDParameter = menuID != null ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(string));
    
            var menuNameParameter = menuName != null ?
                new ObjectParameter("MenuName", menuName) :
                new ObjectParameter("MenuName", typeof(string));
    
            var parent_MenuIDParameter = parent_MenuID != null ?
                new ObjectParameter("Parent_MenuID", parent_MenuID) :
                new ObjectParameter("Parent_MenuID", typeof(string));
    
            var user_RollParameter = user_Roll.HasValue ?
                new ObjectParameter("User_Roll", user_Roll) :
                new ObjectParameter("User_Roll", typeof(int));
    
            var menuFileNameParameter = menuFileName != null ?
                new ObjectParameter("MenuFileName", menuFileName) :
                new ObjectParameter("MenuFileName", typeof(string));
    
            var menuURLParameter = menuURL != null ?
                new ObjectParameter("MenuURL", menuURL) :
                new ObjectParameter("MenuURL", typeof(string));
    
            var uSE_YNParameter = uSE_YN != null ?
                new ObjectParameter("USE_YN", uSE_YN) :
                new ObjectParameter("USE_YN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PROC_Menu_Update", menuIdentityParameter, menuIDParameter, menuNameParameter, parent_MenuIDParameter, user_RollParameter, menuFileNameParameter, menuURLParameter, uSE_YNParameter);
        }
    
        public virtual ObjectResult<PROC_MenubyUserRole_Select_Result> PROC_MenubyUserRole_Select(string role)
        {
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_MenubyUserRole_Select_Result>("PROC_MenubyUserRole_Select", roleParameter);
        }
    
        public virtual ObjectResult<PROC_UserRoles_Select_Result> PROC_UserRoles_Select(string role)
        {
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_UserRoles_Select_Result>("PROC_UserRoles_Select", roleParameter);
        }
    
        public virtual ObjectResult<Proc_WorkFLow_Get_ConditionalMailBox_Result> Proc_WorkFLow_Get_ConditionalMailBox(Nullable<int> pintUserId, string pchrStatus, string fromdate, string todate)
        {
            var pintUserIdParameter = pintUserId.HasValue ?
                new ObjectParameter("pintUserId", pintUserId) :
                new ObjectParameter("pintUserId", typeof(int));
    
            var pchrStatusParameter = pchrStatus != null ?
                new ObjectParameter("pchrStatus", pchrStatus) :
                new ObjectParameter("pchrStatus", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_WorkFLow_Get_ConditionalMailBox_Result>("Proc_WorkFLow_Get_ConditionalMailBox", pintUserIdParameter, pchrStatusParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<Proc_WorkFLow_Get_ConditionalSentMail_Result> Proc_WorkFLow_Get_ConditionalSentMail(Nullable<int> pintUserId, string pchrStatus, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var pintUserIdParameter = pintUserId.HasValue ?
                new ObjectParameter("pintUserId", pintUserId) :
                new ObjectParameter("pintUserId", typeof(int));
    
            var pchrStatusParameter = pchrStatus != null ?
                new ObjectParameter("pchrStatus", pchrStatus) :
                new ObjectParameter("pchrStatus", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_WorkFLow_Get_ConditionalSentMail_Result>("Proc_WorkFLow_Get_ConditionalSentMail", pintUserIdParameter, pchrStatusParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<Proc_WorkFLow_Get_MailBox_Result> Proc_WorkFLow_Get_MailBox(Nullable<int> pintUserId, string pchrStatus)
        {
            var pintUserIdParameter = pintUserId.HasValue ?
                new ObjectParameter("pintUserId", pintUserId) :
                new ObjectParameter("pintUserId", typeof(int));
    
            var pchrStatusParameter = pchrStatus != null ?
                new ObjectParameter("pchrStatus", pchrStatus) :
                new ObjectParameter("pchrStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_WorkFLow_Get_MailBox_Result>("Proc_WorkFLow_Get_MailBox", pintUserIdParameter, pchrStatusParameter);
        }
    
        public virtual ObjectResult<Proc_WorkFLow_Get_SentMail_Result> Proc_WorkFLow_Get_SentMail(Nullable<int> pintUserId, string pchrStatus)
        {
            var pintUserIdParameter = pintUserId.HasValue ?
                new ObjectParameter("pintUserId", pintUserId) :
                new ObjectParameter("pintUserId", typeof(int));
    
            var pchrStatusParameter = pchrStatus != null ?
                new ObjectParameter("pchrStatus", pchrStatus) :
                new ObjectParameter("pchrStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_WorkFLow_Get_SentMail_Result>("Proc_WorkFLow_Get_SentMail", pintUserIdParameter, pchrStatusParameter);
        }
    
        public virtual int Proc_WorkFlow_Trans_Details_Save(Nullable<int> wTM_MasID, Nullable<int> wTD_TransID, Nullable<int> wTD_TransFrom, string wTD_To, string wTD_Remarks, Nullable<int> wTD_WFStatsID, Nullable<int> wTD_WFActionID, Nullable<int> wTD_SentBy, ObjectParameter iRetTransID, ObjectParameter iRetOperation)
        {
            var wTM_MasIDParameter = wTM_MasID.HasValue ?
                new ObjectParameter("WTM_MasID", wTM_MasID) :
                new ObjectParameter("WTM_MasID", typeof(int));
    
            var wTD_TransIDParameter = wTD_TransID.HasValue ?
                new ObjectParameter("WTD_TransID", wTD_TransID) :
                new ObjectParameter("WTD_TransID", typeof(int));
    
            var wTD_TransFromParameter = wTD_TransFrom.HasValue ?
                new ObjectParameter("WTD_TransFrom", wTD_TransFrom) :
                new ObjectParameter("WTD_TransFrom", typeof(int));
    
            var wTD_ToParameter = wTD_To != null ?
                new ObjectParameter("WTD_To", wTD_To) :
                new ObjectParameter("WTD_To", typeof(string));
    
            var wTD_RemarksParameter = wTD_Remarks != null ?
                new ObjectParameter("WTD_Remarks", wTD_Remarks) :
                new ObjectParameter("WTD_Remarks", typeof(string));
    
            var wTD_WFStatsIDParameter = wTD_WFStatsID.HasValue ?
                new ObjectParameter("WTD_WFStatsID", wTD_WFStatsID) :
                new ObjectParameter("WTD_WFStatsID", typeof(int));
    
            var wTD_WFActionIDParameter = wTD_WFActionID.HasValue ?
                new ObjectParameter("WTD_WFActionID", wTD_WFActionID) :
                new ObjectParameter("WTD_WFActionID", typeof(int));
    
            var wTD_SentByParameter = wTD_SentBy.HasValue ?
                new ObjectParameter("WTD_SentBy", wTD_SentBy) :
                new ObjectParameter("WTD_SentBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_WorkFlow_Trans_Details_Save", wTM_MasIDParameter, wTD_TransIDParameter, wTD_TransFromParameter, wTD_ToParameter, wTD_RemarksParameter, wTD_WFStatsIDParameter, wTD_WFActionIDParameter, wTD_SentByParameter, iRetTransID, iRetOperation);
        }
    
        public virtual int Proc_WorkFlow_Trans_MailBox_Save(Nullable<decimal> wTM_MasID, Nullable<decimal> wTM_TransID, Nullable<decimal> wTM_TrnFrom, Nullable<decimal> wTM_TrnTo, string wTM_UsrOrGrp, string wTM_ReadFlg, string wTM_TrnStatus, ObjectParameter iRetOperation)
        {
            var wTM_MasIDParameter = wTM_MasID.HasValue ?
                new ObjectParameter("WTM_MasID", wTM_MasID) :
                new ObjectParameter("WTM_MasID", typeof(decimal));
    
            var wTM_TransIDParameter = wTM_TransID.HasValue ?
                new ObjectParameter("WTM_TransID", wTM_TransID) :
                new ObjectParameter("WTM_TransID", typeof(decimal));
    
            var wTM_TrnFromParameter = wTM_TrnFrom.HasValue ?
                new ObjectParameter("WTM_TrnFrom", wTM_TrnFrom) :
                new ObjectParameter("WTM_TrnFrom", typeof(decimal));
    
            var wTM_TrnToParameter = wTM_TrnTo.HasValue ?
                new ObjectParameter("WTM_TrnTo", wTM_TrnTo) :
                new ObjectParameter("WTM_TrnTo", typeof(decimal));
    
            var wTM_UsrOrGrpParameter = wTM_UsrOrGrp != null ?
                new ObjectParameter("WTM_UsrOrGrp", wTM_UsrOrGrp) :
                new ObjectParameter("WTM_UsrOrGrp", typeof(string));
    
            var wTM_ReadFlgParameter = wTM_ReadFlg != null ?
                new ObjectParameter("WTM_ReadFlg", wTM_ReadFlg) :
                new ObjectParameter("WTM_ReadFlg", typeof(string));
    
            var wTM_TrnStatusParameter = wTM_TrnStatus != null ?
                new ObjectParameter("WTM_TrnStatus", wTM_TrnStatus) :
                new ObjectParameter("WTM_TrnStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_WorkFlow_Trans_MailBox_Save", wTM_MasIDParameter, wTM_TransIDParameter, wTM_TrnFromParameter, wTM_TrnToParameter, wTM_UsrOrGrpParameter, wTM_ReadFlgParameter, wTM_TrnStatusParameter, iRetOperation);
        }
    
        public virtual int Proc_WorkFlow_Trans_Master_Save(Nullable<int> wTM_MasID, Nullable<int> wTM_WorkFlowID, string wTM_FormCode, string wTM_Subject, string wTM_Privacy, Nullable<int> wTM_Priority, Nullable<int> wTM_DetailID, Nullable<int> wTM_AttachID, Nullable<int> wTM_CrBy, string wTM_FileNo, Nullable<int> wTM_IsDisposed, Nullable<int> wTM_DisposedBy, string wTM_Status, string wTM_PageIds, ObjectParameter iRetMasIDOut, ObjectParameter iRetOperation)
        {
            var wTM_MasIDParameter = wTM_MasID.HasValue ?
                new ObjectParameter("WTM_MasID", wTM_MasID) :
                new ObjectParameter("WTM_MasID", typeof(int));
    
            var wTM_WorkFlowIDParameter = wTM_WorkFlowID.HasValue ?
                new ObjectParameter("WTM_WorkFlowID", wTM_WorkFlowID) :
                new ObjectParameter("WTM_WorkFlowID", typeof(int));
    
            var wTM_FormCodeParameter = wTM_FormCode != null ?
                new ObjectParameter("WTM_FormCode", wTM_FormCode) :
                new ObjectParameter("WTM_FormCode", typeof(string));
    
            var wTM_SubjectParameter = wTM_Subject != null ?
                new ObjectParameter("WTM_Subject", wTM_Subject) :
                new ObjectParameter("WTM_Subject", typeof(string));
    
            var wTM_PrivacyParameter = wTM_Privacy != null ?
                new ObjectParameter("WTM_Privacy", wTM_Privacy) :
                new ObjectParameter("WTM_Privacy", typeof(string));
    
            var wTM_PriorityParameter = wTM_Priority.HasValue ?
                new ObjectParameter("WTM_Priority", wTM_Priority) :
                new ObjectParameter("WTM_Priority", typeof(int));
    
            var wTM_DetailIDParameter = wTM_DetailID.HasValue ?
                new ObjectParameter("WTM_DetailID", wTM_DetailID) :
                new ObjectParameter("WTM_DetailID", typeof(int));
    
            var wTM_AttachIDParameter = wTM_AttachID.HasValue ?
                new ObjectParameter("WTM_AttachID", wTM_AttachID) :
                new ObjectParameter("WTM_AttachID", typeof(int));
    
            var wTM_CrByParameter = wTM_CrBy.HasValue ?
                new ObjectParameter("WTM_CrBy", wTM_CrBy) :
                new ObjectParameter("WTM_CrBy", typeof(int));
    
            var wTM_FileNoParameter = wTM_FileNo != null ?
                new ObjectParameter("WTM_FileNo", wTM_FileNo) :
                new ObjectParameter("WTM_FileNo", typeof(string));
    
            var wTM_IsDisposedParameter = wTM_IsDisposed.HasValue ?
                new ObjectParameter("WTM_IsDisposed", wTM_IsDisposed) :
                new ObjectParameter("WTM_IsDisposed", typeof(int));
    
            var wTM_DisposedByParameter = wTM_DisposedBy.HasValue ?
                new ObjectParameter("WTM_DisposedBy", wTM_DisposedBy) :
                new ObjectParameter("WTM_DisposedBy", typeof(int));
    
            var wTM_StatusParameter = wTM_Status != null ?
                new ObjectParameter("WTM_Status", wTM_Status) :
                new ObjectParameter("WTM_Status", typeof(string));
    
            var wTM_PageIdsParameter = wTM_PageIds != null ?
                new ObjectParameter("WTM_PageIds", wTM_PageIds) :
                new ObjectParameter("WTM_PageIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_WorkFlow_Trans_Master_Save", wTM_MasIDParameter, wTM_WorkFlowIDParameter, wTM_FormCodeParameter, wTM_SubjectParameter, wTM_PrivacyParameter, wTM_PriorityParameter, wTM_DetailIDParameter, wTM_AttachIDParameter, wTM_CrByParameter, wTM_FileNoParameter, wTM_IsDisposedParameter, wTM_DisposedByParameter, wTM_StatusParameter, wTM_PageIdsParameter, iRetMasIDOut, iRetOperation);
        }
    }
}
